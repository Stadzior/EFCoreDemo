// <auto-generated />
using EFCoreDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreDemo.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220315143418_ManyToMany")]
    partial class ManyToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BarFoo", b =>
                {
                    b.Property<int>("BarsId")
                        .HasColumnType("int");

                    b.Property<int>("FoosId")
                        .HasColumnType("int");

                    b.HasKey("BarsId", "FoosId");

                    b.HasIndex("FoosId");

                    b.ToTable("BarFoo");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Model.Bar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Bar", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bar1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bar2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bar3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bar4"
                        });
                });

            modelBuilder.Entity("EFCoreDemo.Data.Model.Foo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Foo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Foo1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Foo2"
                        });
                });

            modelBuilder.Entity("BarFoo", b =>
                {
                    b.HasOne("EFCoreDemo.Data.Model.Bar", null)
                        .WithMany()
                        .HasForeignKey("BarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreDemo.Data.Model.Foo", null)
                        .WithMany()
                        .HasForeignKey("FoosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
